{
    "componentChunkName": "component---src-pages-player-sdk-ios-pre-buffering-mdx",
    "path": "/player-sdk-ios/pre-buffering/",
    "result": {"pageContext":{"frontmatter":{"title":"Pre-Buffering","description":"Pre-Buffering"},"relativePagePath":"/player-sdk-ios/pre-buffering.mdx","titleType":"page","MdxNode":{"id":"6c1df463-4001-5b74-8282-654ef6df58a2","children":[],"parent":"5b4e164e-d224-55bd-8c22-97e879afc763","internal":{"content":"---\ntitle: Pre-Buffering\ndescription: Pre-Buffering\n---\n\n<InlineNotification kind=\"warning\">\n\nPlease note that as of November 1st, 2022 IBM has discontinued support for the Video Streaming Player SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications and delete them from your archives. You may find information for alternative methods to create customized viewer experiences with our APIs on our [Developer Tools pages](https://developers.video.ibm.com/player-api-examples/custom-ui). Users may also continue to access Video Streaming through the web, both at [video.ibm.com](https://video.ibm.com/) and through Embedded modules.\n\n</InlineNotification>\n\n## Introduction\n`USPrebufferingController` provides an API allowing the buffering of content ahead of time, to support near instantaneous playback starts.\nIf you provide a content list to be prepared for playback before it is actually required to be started, you will likely get a player prepared to start the playback instantly once it is actually needed by the user of your app.\n\n## Usage\n1. Create a content list in priority order as soon as possible. For example, if the application contains a list of videos then the priority order may be determined based on the distance of the video cell from the screen centre. The list must contain `USMediaDescriptor` objects.\n\n2. Enqueue the content list for preparation using the `enqueueForPlaybackPreparation:` method.\n\n3. Update the list whenever it is needed by calling `enqueueForPlaybackPreparation:` with a new list. For example, when the user is scrolling up/down in the list.\n\n4. Request a `USUstreamPlayer` for a media using `playerForMedia:` when the user is initiating a playback, eg. when a video is selected.\n\n5. Present the requested player.\n\n## Notes\n- The content list can be updated freely anytime, it won't trigger re-buffering on an existing player.\n- The provided player is owned by the caller, it may be used as any other player created with `[[USUstreamPlayer alloc] init]` for example.\n- If the caller releases the player its resources will be reused for the other enqueued content.\n- If a content was not enqueued but a player is requested for it then the user will get a cold player which will start in buffering state, but it is a completely valid usage.\n- If it is appropriate, call `cancelPlaybackPreparations` to release system resources.\n- If `playerForMedia:` is called multiple times with the same `USMediaDescriptor` it will return the same player instance. You should create a different `USMediaDescriptor` object for each occurrence in order to get different players for them.\n","type":"Mdx","contentDigest":"7972c0fa6a6890f28dfbc64ff1bf9958","owner":"gatsby-plugin-mdx","counter":521},"frontmatter":{"title":"Pre-Buffering","description":"Pre-Buffering"},"exports":{},"rawBody":"---\ntitle: Pre-Buffering\ndescription: Pre-Buffering\n---\n\n<InlineNotification kind=\"warning\">\n\nPlease note that as of November 1st, 2022 IBM has discontinued support for the Video Streaming Player SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications and delete them from your archives. You may find information for alternative methods to create customized viewer experiences with our APIs on our [Developer Tools pages](https://developers.video.ibm.com/player-api-examples/custom-ui). Users may also continue to access Video Streaming through the web, both at [video.ibm.com](https://video.ibm.com/) and through Embedded modules.\n\n</InlineNotification>\n\n## Introduction\n`USPrebufferingController` provides an API allowing the buffering of content ahead of time, to support near instantaneous playback starts.\nIf you provide a content list to be prepared for playback before it is actually required to be started, you will likely get a player prepared to start the playback instantly once it is actually needed by the user of your app.\n\n## Usage\n1. Create a content list in priority order as soon as possible. For example, if the application contains a list of videos then the priority order may be determined based on the distance of the video cell from the screen centre. The list must contain `USMediaDescriptor` objects.\n\n2. Enqueue the content list for preparation using the `enqueueForPlaybackPreparation:` method.\n\n3. Update the list whenever it is needed by calling `enqueueForPlaybackPreparation:` with a new list. For example, when the user is scrolling up/down in the list.\n\n4. Request a `USUstreamPlayer` for a media using `playerForMedia:` when the user is initiating a playback, eg. when a video is selected.\n\n5. Present the requested player.\n\n## Notes\n- The content list can be updated freely anytime, it won't trigger re-buffering on an existing player.\n- The provided player is owned by the caller, it may be used as any other player created with `[[USUstreamPlayer alloc] init]` for example.\n- If the caller releases the player its resources will be reused for the other enqueued content.\n- If a content was not enqueued but a player is requested for it then the user will get a cold player which will start in buffering state, but it is a completely valid usage.\n- If it is appropriate, call `cancelPlaybackPreparations` to release system resources.\n- If `playerForMedia:` is called multiple times with the same `USMediaDescriptor` it will return the same player instance. You should create a different `USMediaDescriptor` object for each occurrence in order to get different players for them.\n","fileAbsolutePath":"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/src/pages/player-sdk-ios/pre-buffering.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2203542295","2746626797","3037994772","559098832","768070550"]}