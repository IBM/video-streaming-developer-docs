{
    "componentChunkName": "component---src-pages-player-sdk-android-changing-tracks-mdx",
    "path": "/player-sdk-android/changing-tracks/",
    "result": {"pageContext":{"frontmatter":{"title":"Changing Tracks","description":"Changing Tracks"},"relativePagePath":"/player-sdk-android/changing-tracks.mdx","titleType":"page","MdxNode":{"id":"8303461b-83c6-5e5e-9abe-11d885218a43","children":[],"parent":"efa6180c-c773-551b-8d11-1b0dfc91676b","internal":{"content":"---\ntitle: Changing Tracks\ndescription: Changing Tracks\n---\n\n<InlineNotification kind=\"warning\">\n\nPlease note that as of November 1st, 2022 IBM has discontinued support for the Video Streaming Player SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications and delete them from your archives. You may find information for alternative methods to create customized viewer experiences with our APIs on our [Developer Tools pages](https://developers.video.ibm.com/player-api-examples/custom-ui). Users may also continue to access Video Streaming through the web, both at [video.ibm.com](https://video.ibm.com/) and through Embedded modules.\n\n</InlineNotification>\n\nVideo streams can contain multiple tracks of different types (usually video, audio and text such as for captions). The Player SDK lets you control which of these\ntracks are selected and presented to the user. See this document's `MediaTrackChangeListener` section or the corresponding javadoc for API reference.\n\n## Usage\n\n- Set a `MediaTrackChangeListener` on an initialized player, call `attach()` when appropriate.\n- When the player determines the available track groups\nit will report it through the listener's `void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups)` callback.\n- The `mediaTrackGroups` object holds the available media tracks for each track type. Use these to instruct the player's specific renderers to\nplay a certain media track. A renderer can also be disabled.\n\n**Example**: Selecting a subtitle / closed captions track\n\n```java\nPlayerFactory playerFactory = new PlayerFactory(RegionalCluster.WORLD_WIDE, API_KEY, activity);\nContentDescriptor contentDescriptor = new ContentDescriptor(ContentType.RECORDED, 123456L);\nPlayer player = playerFactory.createPlayer(contentDescriptor.toString());\nplayer.initWithContent(contentDescriptor);\nplayer.setMediaTracksChangeListener(mediaTrackChangeListener);\nplayer.attach();\n\n//... Inside the MediaTrackChangeListener\npublic void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups) {\n    availableTextTracks = trackGroupHolder.textTracks;\n    // Update the subtitle selector with the available subtitles\n}\n\n//... When the user selects a subtitle track from the selector:\nvoid selectTrack(MediaTrack mediaTrack) {\n    player.selectTrackForRenderer(mediaTracks, null);\n}\n```\n\n**Example**: Querying whether a `MediaFormat` is supported\n\n```java\n//... Inside the MediaTrackChangeListener\npublic void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups) {\n    for (MediaTrack videoTrack : mediaTrackGroups.videoTracks) {\n        for (MediaFormat videoFormat : videoTrack.mediaFormats) {\n            if (mediaTrackGroups.formatSupportInfo.isSupported(videoFormat)) {\n                logSupportedFormat(videoTrack, videoFormat);\n            } else {\n                logUnsupportedFormat(videoTrack, videoFormat);\n            }\n        }\n    }\n}\n```\n\nFor more detailed and general examples please consult the provided sample app.\n","type":"Mdx","contentDigest":"bd05275d415807236223933738765037","owner":"gatsby-plugin-mdx","counter":512},"frontmatter":{"title":"Changing Tracks","description":"Changing Tracks"},"exports":{},"rawBody":"---\ntitle: Changing Tracks\ndescription: Changing Tracks\n---\n\n<InlineNotification kind=\"warning\">\n\nPlease note that as of November 1st, 2022 IBM has discontinued support for the Video Streaming Player SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications and delete them from your archives. You may find information for alternative methods to create customized viewer experiences with our APIs on our [Developer Tools pages](https://developers.video.ibm.com/player-api-examples/custom-ui). Users may also continue to access Video Streaming through the web, both at [video.ibm.com](https://video.ibm.com/) and through Embedded modules.\n\n</InlineNotification>\n\nVideo streams can contain multiple tracks of different types (usually video, audio and text such as for captions). The Player SDK lets you control which of these\ntracks are selected and presented to the user. See this document's `MediaTrackChangeListener` section or the corresponding javadoc for API reference.\n\n## Usage\n\n- Set a `MediaTrackChangeListener` on an initialized player, call `attach()` when appropriate.\n- When the player determines the available track groups\nit will report it through the listener's `void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups)` callback.\n- The `mediaTrackGroups` object holds the available media tracks for each track type. Use these to instruct the player's specific renderers to\nplay a certain media track. A renderer can also be disabled.\n\n**Example**: Selecting a subtitle / closed captions track\n\n```java\nPlayerFactory playerFactory = new PlayerFactory(RegionalCluster.WORLD_WIDE, API_KEY, activity);\nContentDescriptor contentDescriptor = new ContentDescriptor(ContentType.RECORDED, 123456L);\nPlayer player = playerFactory.createPlayer(contentDescriptor.toString());\nplayer.initWithContent(contentDescriptor);\nplayer.setMediaTracksChangeListener(mediaTrackChangeListener);\nplayer.attach();\n\n//... Inside the MediaTrackChangeListener\npublic void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups) {\n    availableTextTracks = trackGroupHolder.textTracks;\n    // Update the subtitle selector with the available subtitles\n}\n\n//... When the user selects a subtitle track from the selector:\nvoid selectTrack(MediaTrack mediaTrack) {\n    player.selectTrackForRenderer(mediaTracks, null);\n}\n```\n\n**Example**: Querying whether a `MediaFormat` is supported\n\n```java\n//... Inside the MediaTrackChangeListener\npublic void onMediaTracksChanged(MediaTrackGroupHolder mediaTrackGroups) {\n    for (MediaTrack videoTrack : mediaTrackGroups.videoTracks) {\n        for (MediaFormat videoFormat : videoTrack.mediaFormats) {\n            if (mediaTrackGroups.formatSupportInfo.isSupported(videoFormat)) {\n                logSupportedFormat(videoTrack, videoFormat);\n            } else {\n                logUnsupportedFormat(videoTrack, videoFormat);\n            }\n        }\n    }\n}\n```\n\nFor more detailed and general examples please consult the provided sample app.\n","fileAbsolutePath":"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/src/pages/player-sdk-android/changing-tracks.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2203542295","2746626797","3037994772","559098832","768070550"]}