{
    "componentChunkName": "component---src-pages-channel-api-qna-2-0-initialization-mdx",
    "path": "/channel-api-qna-2-0/initialization/",
    "result": {"pageContext":{"frontmatter":{"title":"Q&A Initialization","description":"Q&A initialization"},"relativePagePath":"/channel-api-qna-2-0/initialization.mdx","titleType":"page","MdxNode":{"id":"8b2c9045-d4df-5c95-abdd-e0a158273884","children":[],"parent":"cead8b9b-4d44-5834-af5a-aea2e3baea38","internal":{"content":"---\ntitle: Q&A Initialization\ndescription: Q&A initialization\n---\n\n## Initialization\n\n```\nGET https://api.video.ibm.com/channels/{channelId}/qna.json\n```\n\n### Success response\n\nUpon success, a response with HTTP status “200 OK” is returned with the following key-value pairs inside the `qna` root object.\n\n| KEY                          | TYPE        | DESCRIPTION                                                       |\n| ---------------------------- | ----------- | ----------------------------------------------------------------- |\n| `stream_data`                | object      | Data for connect                                                  |\n| `stream_data`.`api_base_url` | string      | Service base url                                                  |\n| `stream_data`.`api_key`      | string      | Api key for the service                                           |\n| `stream_data`.`channel_id`   | string      | Channel id for the connection                                     |\n| `stream_data`.`channel_type` | string      | Channel type                                                      |\n| `stream_data`.`team`         | string      | Team identifier                                                   |\n| `user`                       | object      | User related data                                                 |\n| `user`.`default_name`        | string¦null | Default name based on the token                                   |\n| `user`.`id`                  | string      | User identifier                                                   |\n| `user`.`has_verified_user`   | boolean     | Is the user known based on the access token or generated randomly |\n| `user`.`token`               | string      | Token for the service                                             |\n\nExample of a success response:\n\n```json\n{\n  \"qna\": {\n    \"stream_data\": {\n      \"api_base_url\": \"https://chat-proxy-us-east.stream-io-api.com\",\n      \"api_key\": \"abc123\",\n      \"channel_id\": \"qna_12345678\",\n      \"channel_type\": \"qna\",\n      \"team\": \"team_12345678\"\n    },\n    \"user\": {\n      \"default_name\": \"John Smith\",\n      \"id\": \"ee11cbb19052e40b07aac0ca060c23ee\",\n      \"has_verified_user\": true,\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJOb3RoaW5nIHRvIHNlZSBoZXJlIn0.JBqm9SULSLYo2f8-MD7JCQZX-Iyc7dUJ-Tm6kIvDxjA\"\n    }\n  }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE       | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | `bad_request`     | Invalid value was supplied                                                              |\n| 401 Unauthorized        | `invalid_token`   | The provided access token is missing, revoked, expired or malformed                     |\n| 402 Payment Required    | `invalid_request` | The user does not have the `streamqna` benefit                                         |\n| 404 Not Found           | `not_found`       | Channel not found                                                                       |\n| 503 Service Unavailable |                   | There is a temporary error on the server which makes it impossible to serve the request |\n\n","type":"Mdx","contentDigest":"9eabbc0b26074304ae09cbf515623891","owner":"gatsby-plugin-mdx","counter":417},"frontmatter":{"title":"Q&A Initialization","description":"Q&A initialization"},"exports":{},"rawBody":"---\ntitle: Q&A Initialization\ndescription: Q&A initialization\n---\n\n## Initialization\n\n```\nGET https://api.video.ibm.com/channels/{channelId}/qna.json\n```\n\n### Success response\n\nUpon success, a response with HTTP status “200 OK” is returned with the following key-value pairs inside the `qna` root object.\n\n| KEY                          | TYPE        | DESCRIPTION                                                       |\n| ---------------------------- | ----------- | ----------------------------------------------------------------- |\n| `stream_data`                | object      | Data for connect                                                  |\n| `stream_data`.`api_base_url` | string      | Service base url                                                  |\n| `stream_data`.`api_key`      | string      | Api key for the service                                           |\n| `stream_data`.`channel_id`   | string      | Channel id for the connection                                     |\n| `stream_data`.`channel_type` | string      | Channel type                                                      |\n| `stream_data`.`team`         | string      | Team identifier                                                   |\n| `user`                       | object      | User related data                                                 |\n| `user`.`default_name`        | string¦null | Default name based on the token                                   |\n| `user`.`id`                  | string      | User identifier                                                   |\n| `user`.`has_verified_user`   | boolean     | Is the user known based on the access token or generated randomly |\n| `user`.`token`               | string      | Token for the service                                             |\n\nExample of a success response:\n\n```json\n{\n  \"qna\": {\n    \"stream_data\": {\n      \"api_base_url\": \"https://chat-proxy-us-east.stream-io-api.com\",\n      \"api_key\": \"abc123\",\n      \"channel_id\": \"qna_12345678\",\n      \"channel_type\": \"qna\",\n      \"team\": \"team_12345678\"\n    },\n    \"user\": {\n      \"default_name\": \"John Smith\",\n      \"id\": \"ee11cbb19052e40b07aac0ca060c23ee\",\n      \"has_verified_user\": true,\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJOb3RoaW5nIHRvIHNlZSBoZXJlIn0.JBqm9SULSLYo2f8-MD7JCQZX-Iyc7dUJ-Tm6kIvDxjA\"\n    }\n  }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE       | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | `bad_request`     | Invalid value was supplied                                                              |\n| 401 Unauthorized        | `invalid_token`   | The provided access token is missing, revoked, expired or malformed                     |\n| 402 Payment Required    | `invalid_request` | The user does not have the `streamqna` benefit                                         |\n| 404 Not Found           | `not_found`       | Channel not found                                                                       |\n| 503 Service Unavailable |                   | There is a temporary error on the server which makes it impossible to serve the request |\n\n","fileAbsolutePath":"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/src/pages/channel-api-qna-2-0/initialization.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2203542295","2746626797","3037994772","559098832","768070550"]}