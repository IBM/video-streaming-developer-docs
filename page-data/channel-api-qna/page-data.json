{
    "componentChunkName": "component---src-pages-channel-api-qna-mdx",
    "path": "/channel-api-qna/",
    "result": {"pageContext":{"frontmatter":{"title":"QnA","description":"QnA"},"relativePagePath":"/channel-api-qna.mdx","titleType":"page","MdxNode":{"id":"04fa3d62-16ac-5b2f-9da1-305a3354a5ff","children":[],"parent":"2585cded-0b4f-57e3-b7bd-bd8f7e952bd9","internal":{"content":"---\ntitle: QnA\ndescription: QnA\n---\n\n## Check QnA is enabled\n\n```\nGET https://api.video.ibm.com/channels/{channelId}/settings/qna.json\n```\n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with the following key-value pairs.\n\n| KEY                             | TYPE    | DESCRIPTION                                               |\n| ------------------------------- | ------- | ----------------------------------------------------------|\n| `enabled`                       | boolean | QnA is enabled                                            |\n| `is_default_interactive_module` | boolean | QnA is the default interactive module on the channel page |\n\nExample of a success response:\n\n```json\n{\n    \"enabled\": true,\n    \"is_default_interactive_module\": false\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE         | ERROR CONDITIONS                                                                        |\n| ----------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        | `invalid_token`     | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Unauthorized        | `lack_of_ownership` | The provided access token could not access the given channel                            |\n| 503 Service Unavailable |                     | There is a temporary error on the server which makes it impossible to serve the request |\n\n## Turn on/off QnA\n\n```\nPUT https://api.video.ibm.com/channels/{channelId}/settings/qna.json\n```\n\n### Parameters\n\n| KEY        | TYPE   | IMPORTANCE | DESCRIPTION |\n| ---------- | ------ | ---------- | ----------- |\n| `enable`   | string | REQUIRED   | true/false  |\n\nThe Content-Type of the request should be **application/x-www-form-urlencoded**.\n\nExample of the request:\n\n```\nPOST /channels/1234/settings/qna.json HTTP/1.1\nHost: api.video.ibm.com\nAuthorization: Bearer 3c2573673b782f6544405a22636f3d5d3b6f3950\nContent-Type: application/x-www-form-urlencoded\n\nenable=true\n```\n\n### Success response\n\nUpon success the response body is empty with an HTTP Status code of 204.\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE         | ERROR CONDITIONS                                                                        |\n| ----------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        | `invalid_token`     | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Unauthorized        | `lack_of_ownership` | The provided access token could not access the given channel                            |\n| 503 Service Unavailable |                     | There is a temporary error on the server which makes it impossible to serve the request |\n\n## Get a list of QnA questions on a channel\n\nReturns the QnA questions on a channel\n\n```\nGET https://api.video.ibm.com/channels/{channelId}/qna/questions.json\n```\n\n### Parameters\n\nThe query parameters for the GET request:\n\n| PARAMETER  | TYPE    | IMPORTANCE | DESCRIPTION                                             |\n| ---------- | ------- | ---------- | ------------------------------------------------------- |\n| `from`     | integer | OPTIONAL   | List start timestamp                                    |\n| `to`       | integer | OPTIONAL   | List end timestamp                                      |\n| `page`     | integer | OPTIONAL   | Requested page number (value is 1 by default)           |\n| `pagesize` | integer | OPTIONAL   | Requested page size (value is 100 by default, max. 100) |\n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with the following key-value pairs under an `questions` key.\n\n| KEY                   | TYPE      | DESCRIPTION                                                       |\n| --------------------- | --------- | ----------------------------------------------------------------- |\n| `user_display_name`   | string    | Questioner's display name                                         |\n| `question`            | string    | Question                                                          |\n| `answer`              | string    | Answer (if the question has been answered)                        |\n| `user_email`          | string    | Questioner's email                                                |\n| `created_at`          | integer   | The date and time when the question was asked (Unix timestamp)    |\n| `is_edited`           | boolean   | True if the question has been edited                              |\n| `is_archived`         | boolean   | True if the question has been archived                            |\n| `is_moderated`        | boolean   | True if the question has been moderated                           |\n| `votes`               | integer   | Number of votes the question got                                  |\n\nExample of a success response:\n\n```json\n{\n  \"questions\": [\n    {\n      \"user_display_name\": \"john\",\n      \"question\": \"How is the weather where you are?\",\n      \"answer\": \"It's beautiful\",\n      \"user_email\": \"john@example.com\",\n      \"created_at\": 1599852837,\n      \"is_edited\": false,\n      \"is_archived\": true,\n      \"is_moderated\": true,\n      \"votes\": 0\n    },\n    ...\n  ]\n}\n```\n\nThe paging information can be found under the `paging` key. Example:\n\n```json\n{\n  \"paging\": {\n    \"previous\": \"https://api.video.ibm.com/channels/CHANNEL_ID/qna/questions.json?page=1\",\n    \"next\": \"https://api.video.ibm.com/channels/CHANNEL_ID/qna/questions.json?page=3\",\n    \"page_count\": 3,\n    \"item_count\": 272\n  }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE         | ERROR CONDITIONS                                                                        |\n| ----------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        | `invalid_token`     | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Unauthorized        | `lack_of_ownership` | The provided access token could not access the given channel                            |\n| 503 Service Unavailable |                     | There is a temporary error on the server which makes it impossible to serve the request |\n","type":"Mdx","contentDigest":"bf0f8c2653e8b41c864fd95f65b53bd5","owner":"gatsby-plugin-mdx","counter":347},"frontmatter":{"title":"QnA","description":"QnA"},"exports":{},"rawBody":"---\ntitle: QnA\ndescription: QnA\n---\n\n## Check QnA is enabled\n\n```\nGET https://api.video.ibm.com/channels/{channelId}/settings/qna.json\n```\n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with the following key-value pairs.\n\n| KEY                             | TYPE    | DESCRIPTION                                               |\n| ------------------------------- | ------- | ----------------------------------------------------------|\n| `enabled`                       | boolean | QnA is enabled                                            |\n| `is_default_interactive_module` | boolean | QnA is the default interactive module on the channel page |\n\nExample of a success response:\n\n```json\n{\n    \"enabled\": true,\n    \"is_default_interactive_module\": false\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE         | ERROR CONDITIONS                                                                        |\n| ----------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        | `invalid_token`     | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Unauthorized        | `lack_of_ownership` | The provided access token could not access the given channel                            |\n| 503 Service Unavailable |                     | There is a temporary error on the server which makes it impossible to serve the request |\n\n## Turn on/off QnA\n\n```\nPUT https://api.video.ibm.com/channels/{channelId}/settings/qna.json\n```\n\n### Parameters\n\n| KEY        | TYPE   | IMPORTANCE | DESCRIPTION |\n| ---------- | ------ | ---------- | ----------- |\n| `enable`   | string | REQUIRED   | true/false  |\n\nThe Content-Type of the request should be **application/x-www-form-urlencoded**.\n\nExample of the request:\n\n```\nPOST /channels/1234/settings/qna.json HTTP/1.1\nHost: api.video.ibm.com\nAuthorization: Bearer 3c2573673b782f6544405a22636f3d5d3b6f3950\nContent-Type: application/x-www-form-urlencoded\n\nenable=true\n```\n\n### Success response\n\nUpon success the response body is empty with an HTTP Status code of 204.\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE         | ERROR CONDITIONS                                                                        |\n| ----------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        | `invalid_token`     | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Unauthorized        | `lack_of_ownership` | The provided access token could not access the given channel                            |\n| 503 Service Unavailable |                     | There is a temporary error on the server which makes it impossible to serve the request |\n\n## Get a list of QnA questions on a channel\n\nReturns the QnA questions on a channel\n\n```\nGET https://api.video.ibm.com/channels/{channelId}/qna/questions.json\n```\n\n### Parameters\n\nThe query parameters for the GET request:\n\n| PARAMETER  | TYPE    | IMPORTANCE | DESCRIPTION                                             |\n| ---------- | ------- | ---------- | ------------------------------------------------------- |\n| `from`     | integer | OPTIONAL   | List start timestamp                                    |\n| `to`       | integer | OPTIONAL   | List end timestamp                                      |\n| `page`     | integer | OPTIONAL   | Requested page number (value is 1 by default)           |\n| `pagesize` | integer | OPTIONAL   | Requested page size (value is 100 by default, max. 100) |\n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with the following key-value pairs under an `questions` key.\n\n| KEY                   | TYPE      | DESCRIPTION                                                       |\n| --------------------- | --------- | ----------------------------------------------------------------- |\n| `user_display_name`   | string    | Questioner's display name                                         |\n| `question`            | string    | Question                                                          |\n| `answer`              | string    | Answer (if the question has been answered)                        |\n| `user_email`          | string    | Questioner's email                                                |\n| `created_at`          | integer   | The date and time when the question was asked (Unix timestamp)    |\n| `is_edited`           | boolean   | True if the question has been edited                              |\n| `is_archived`         | boolean   | True if the question has been archived                            |\n| `is_moderated`        | boolean   | True if the question has been moderated                           |\n| `votes`               | integer   | Number of votes the question got                                  |\n\nExample of a success response:\n\n```json\n{\n  \"questions\": [\n    {\n      \"user_display_name\": \"john\",\n      \"question\": \"How is the weather where you are?\",\n      \"answer\": \"It's beautiful\",\n      \"user_email\": \"john@example.com\",\n      \"created_at\": 1599852837,\n      \"is_edited\": false,\n      \"is_archived\": true,\n      \"is_moderated\": true,\n      \"votes\": 0\n    },\n    ...\n  ]\n}\n```\n\nThe paging information can be found under the `paging` key. Example:\n\n```json\n{\n  \"paging\": {\n    \"previous\": \"https://api.video.ibm.com/channels/CHANNEL_ID/qna/questions.json?page=1\",\n    \"next\": \"https://api.video.ibm.com/channels/CHANNEL_ID/qna/questions.json?page=3\",\n    \"page_count\": 3,\n    \"item_count\": 272\n  }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE         | ERROR CONDITIONS                                                                        |\n| ----------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        | `invalid_token`     | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Unauthorized        | `lack_of_ownership` | The provided access token could not access the given channel                            |\n| 503 Service Unavailable |                     | There is a temporary error on the server which makes it impossible to serve the request |\n","fileAbsolutePath":"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/src/pages/channel-api-qna.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2203542295","2746626797","3037994772","559098832","768070550"]}