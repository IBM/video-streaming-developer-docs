{
    "componentChunkName": "component---src-pages-analytics-api-viewers-mdx",
    "path": "/analytics-api/viewers/",
    "result": {"pageContext":{"frontmatter":{"title":"Viewers","description":"List of the unique viewers for all contents"},"relativePagePath":"/analytics-api/viewers.mdx","titleType":"page","MdxNode":{"id":"929e0ccd-0b7f-5c42-ab08-5c653c8730c5","children":[],"parent":"6d742c4c-02d2-5b9d-9227-1842b7eea707","internal":{"content":"---\ntitle: Viewers\ndescription: List of the unique viewers for all contents\n---\n\n## List of the unique viewers for all contents\n\nYou can get a list of every individual viewer for all of your channels by\ncalling this endpoint. You look for a specific viewer by using the\n`viewer_identifier` parameter for matching an identifier or part of an\nidentifier.\n\n```\nGET https://analytics-api.video.ibm.com/v1/viewers\n```\n\n### Parameters\n\nThe query parameters for the GET request:\n\n| PARAMETER                  | TYPE    | IMPORTANCE | DESCRIPTION                                                                     |\n| -------------------------- | ------- | ---------- | ------------------------------------------------------------------------------- |\n| `viewer_identifier`        | string  | OPTIONAL   | Filter for viewer identifiers containing this string                            |\n| `list_unfinished_segments` | boolean | OPTIONAL   | Flag for including unfinished segments in the result (value is true by default) |\n| `date_time_from`           | string  | OPTIONAL   | Start date and time for a period in ISO8601 format                              |\n| `date_time_to`             | string  | OPTIONAL   | End date and time for a period in ISO8601 format                                |\n| `_page`                    | integer | OPTIONAL   | Requested page number (value is 1 by default)                                   |\n| `_limit`                   | integer | OPTIONAL   | Requested page size (value is 10 by default, max. 10 000)                       | \n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with an array under a `data` key. The elements of the array contain every `viewer`\nmatching the query parameters. Each `viewer` has the following attributes under the `attributes` key:\n\n| KEY                                 | TYPE    | DESCRIPTION                                                                                                             |\n| ----------------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `last_activity`                     | string  | Last activity recorded from the viewer                                                                                                                        |\n| `segments`                          | array   | An array of the viewers segments, which are matching the query parameters |\n| `videos_watched`                    | integer | Number of distinct medias from the segments array                                                                                                                          |\n| `viewer_identifier`                 | string  | Viewer identifier string. It can be an e-mail or any string representing a viewer |\n\nThe `segments` array contains the following key-value structure:\n\n| KEY                      | TYPE    | DESCRIPTION                                                                                                             |\n| ------------------------ | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `id`                     | string  | Uniuque segment id                                                                                                      |\n| `content_type`           | string  | Watched content type                                                                                                    |\n| `content_id`             | integer |                                                                                                                         |\n| `started_at`             | string  | Start date and time in ISO8601 format                                                                                   |\n| `finished_at`            | string  | Finish date and time in ISO8601 format                                                                                  |\n| `from`                   | integer | Start position of the view for videos in seconds                                                                        |\n| `to`                     | integer | End position of the view for videos in seconds                                                                                                                        |\n| `view_session_id`        | string  | Player session identifier. Every playing session has a different identifier.                                                                                                                        |\n| `client_id`              | integer | Device identifier                                                                                                                        |\n| `device_info`            | object  | Device information parsed from the viewer's user agent.                                                                                                                         |\n| `country`                | string  | The country of the playback                                                                                                                        |\n| `city`                   | string  | The city of the playback                                                                                                                        |\n| `is_mobile_view`         | boolean | If the playback happened on a mobile device the value is true                                                                                                                        |\n| `view_type`              | string  | `onsite` or `offsite`                                                                                                                        |\n\n\nExample of a success response:\n\n```json\n{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"last_activity\": \"2018-07-16T19:20:30+01:00\",\n                \"segments\": [\n                    {\n                        \"city\": \"Budapest\",\n                        \"client_id\": \"8776986273576598258658\",\n                        \"content_id\": 77569623,\n                        \"content_type\": \"live\",\n                        \"country\": \"HU\",\n                        \"finished_at\": \"2020-07-16T19:20:40+01:00\",\n                        \"from\": 0,\n                        \"id\": \"4bfc69b5-1320-4a44-a8d6-1fe1f397fb94\",\n                        \"is_mobile_view\": false,\n                        \"started_at\": \"2020-07-16T19:20:30+01:00\",\n                        \"to\": 0,\n                        \"view_session_id\": \"7f66d911:8b7aa82c\",\n                        \"view_type\": \"onsite\"\n                    }\n                ],\n                \"videos_watched\": 10,\n                \"viewer_identifier\": \"some.viewer@example.com\"\n            },\n            \"type\": \"Viewer\"\n        }\n    ],\n    \"pagination\": {\n        \"count\": 10,\n        \"first\": {\n            \"href\": \"/viewers?_page=1&_limit=1\"\n        },\n        \"last\": {\n            \"href\": \"/viewers?_page=10&_limit=1\"\n        },\n        \"next\": {\n            \"href\": \"/viewers?_page=2&_limit=1\"\n        },\n        \"prev\": null,\n        \"self\": {\n            \"href\": \"/viewers?_page=1&_limit=1\"\n        }\n    }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR CONDITIONS                                                                        |\n| ----------------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | Validation of the parameters has failed, the response contains a detailed explanation   |\n| 401 Unauthorized        | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | Resource was not found                                                                  |\n| 503 Service Unavailable | There is a temporary error on the server which makes it impossible to serve the request |\n\n## List of the unique viewers for a specific content type\n\nYou can get a list of every individual viewer for just a specific content type, such as live or on demand content, by\ncalling this endpoint. You can also look for a specific viewer by using the\n`viewer_identifier` parameter for matching an identifier or part of an\nidentifier.\n\n```\nGET https://analytics-api.video.ibm.com/v1/viewers/{content_type}\n```\n\n### Parameters\n\nThe query parameters for the GET request:\n\n| PARAMETER                  | TYPE    | IMPORTANCE | DESCRIPTION                                                                     |\n| -------------------------- | ------- | ---------- | ------------------------------------------------------------------------------- |\n| `content_type`             | string  | REQUIRED   | Type of the content, either `live` or `recorded`                                |\n| `content_id`               | integer | OPTIONAL   | A list of comma separated IDs                                                   |\n| `viewer_identifier`        | string  | OPTIONAL   | Filter for viewer identifiers containing this string                            |\n| `list_unfinished_segments` | boolean | OPTIONAL   | Flag for including unfinished segments in the result (value is true by default) |\n| `date_time_from`           | string  | OPTIONAL   | Start date and time for a period in ISO8601 format                              |\n| `date_time_to`             | string  | OPTIONAL   | End date and time for a period in ISO8601 format                                |\n| `_page`                    | integer | OPTIONAL   | Requested page number (value is 1 by default)                                   |\n| `_limit`                   | integer | OPTIONAL   | Requested page size (value is 10 by default, max. 10 000)                       | \n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with an array under a `data` key. The elements of the array contain every `viewer`\nmatching the query parameters. Each `viewer` viewer has the following attributes under the `attributes` key:\n\n| KEY                                 | TYPE    | DESCRIPTION                                                                                                             |\n| ----------------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `last_activity`                     | string  | Last activity recorded from the viewer                                                                                                                        |\n| `segments`                          | array   | An array of the viewers segments, which are matching the query parameters |\n| `videos_watched`                    | integer | Number of distinct medias from the segments array                                                                                                                          |\n| `viewer_identifier`                 | string  | Viewer identifier string. It can be an e-mail or any string representing a viewer |\n\nThe `segments` array contains the following key-value structure:\n\n| KEY                      | TYPE    | DESCRIPTION                                                                                                             |\n| ------------------------ | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `id`                     | string  | Uniuque segment id                                                                                                      |\n| `content_type`           | string  | Watched content type                                                                                                    |\n| `content_id`             | integer |                                                                                                                         |\n| `started_at`             | string  | Start date and time in ISO8601 format                                                                                   |\n| `finished_at`            | string  | Finish date and time in ISO8601 format                                                                                  |\n| `from`                   | integer | Start position of the view for videos in seconds                                                                        |\n| `to`                     | integer | End position of the view for videos in seconds                                                                                                                        |\n| `view_session_id`        | string  | Player session identifier. Every playing session has a different identifier.                                                                                                                        |\n| `client_id`              | integer | Device identifier                                                                                                                        |\n| `device_info`            | object  | Device information parsed from the viewer's user agent.                                                                                                                         |\n| `country`                | string  | The country of the playback                                                                                                                        |\n| `city`                   | string  | The city of the playback                                                                                                                        |\n| `is_mobile_view`         | boolean | If the playback happened on a mobile device the value is true                                                                                                                        |\n| `view_type`              | string  | `onsite` or `offsite`                                                                                                                        |\n\nExample of a success response:\n\n```json\n{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"last_activity\": \"2020-07-16T19:20:30+01:00\",\n                \"segments\": [\n                    {\n                        \"city\": \"Budapest\",\n                        \"client_id\": \"8776986273576598258658\",\n                        \"content_id\": 77569623,\n                        \"content_type\": \"live\",\n                        \"country\": \"HU\",\n                        \"finished_at\": \"2020-07-16T19:20:40+01:00\",\n                        \"from\": 0,\n                        \"id\": \"4bfc69b5-1320-4a44-a8d6-1fe1f397fb94\",\n                        \"is_mobile_view\": false,\n                        \"started_at\": \"2020-07-16T19:20:30+01:00\",\n                        \"to\": 0,\n                        \"view_session_id\": \"7f66d911:8b7aa82c\",\n                        \"view_type\": \"onsite\"\n                    }\n                ],\n                \"videos_watched\": 10,\n                \"viewer_identifier\": \"some.viewer@example.com\"\n            },\n            \"type\": \"Viewer\"\n        }\n    ],\n    \"pagination\": {\n        \"count\": 10,\n        \"first\": {\n            \"href\": \"/viewers/live?_page=1&_limit=1\"\n        },\n        \"last\": {\n            \"href\": \"/viewers/live?_page=10&_limit=1\"\n        },\n        \"next\": {\n            \"href\": \"/viewers/live?_page=2&_limit=1\"\n        },\n        \"prev\": null,\n        \"self\": {\n            \"href\": \"/viewers/live?_page=1&_limit=1\"\n        }\n    }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR CONDITIONS                                                                        |\n| ----------------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | Validation of the parameters has failed, the response contains a detailed explanation   |\n| 401 Unauthorized        | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | Resource was not found                                                                  |\n| 503 Service Unavailable | There is a temporary error on the server which makes it impossible to serve the request |\n","type":"Mdx","contentDigest":"31c0833a3530420230e519280c9e8331","owner":"gatsby-plugin-mdx","counter":371},"frontmatter":{"title":"Viewers","description":"List of the unique viewers for all contents"},"exports":{},"rawBody":"---\ntitle: Viewers\ndescription: List of the unique viewers for all contents\n---\n\n## List of the unique viewers for all contents\n\nYou can get a list of every individual viewer for all of your channels by\ncalling this endpoint. You look for a specific viewer by using the\n`viewer_identifier` parameter for matching an identifier or part of an\nidentifier.\n\n```\nGET https://analytics-api.video.ibm.com/v1/viewers\n```\n\n### Parameters\n\nThe query parameters for the GET request:\n\n| PARAMETER                  | TYPE    | IMPORTANCE | DESCRIPTION                                                                     |\n| -------------------------- | ------- | ---------- | ------------------------------------------------------------------------------- |\n| `viewer_identifier`        | string  | OPTIONAL   | Filter for viewer identifiers containing this string                            |\n| `list_unfinished_segments` | boolean | OPTIONAL   | Flag for including unfinished segments in the result (value is true by default) |\n| `date_time_from`           | string  | OPTIONAL   | Start date and time for a period in ISO8601 format                              |\n| `date_time_to`             | string  | OPTIONAL   | End date and time for a period in ISO8601 format                                |\n| `_page`                    | integer | OPTIONAL   | Requested page number (value is 1 by default)                                   |\n| `_limit`                   | integer | OPTIONAL   | Requested page size (value is 10 by default, max. 10 000)                       | \n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with an array under a `data` key. The elements of the array contain every `viewer`\nmatching the query parameters. Each `viewer` has the following attributes under the `attributes` key:\n\n| KEY                                 | TYPE    | DESCRIPTION                                                                                                             |\n| ----------------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `last_activity`                     | string  | Last activity recorded from the viewer                                                                                                                        |\n| `segments`                          | array   | An array of the viewers segments, which are matching the query parameters |\n| `videos_watched`                    | integer | Number of distinct medias from the segments array                                                                                                                          |\n| `viewer_identifier`                 | string  | Viewer identifier string. It can be an e-mail or any string representing a viewer |\n\nThe `segments` array contains the following key-value structure:\n\n| KEY                      | TYPE    | DESCRIPTION                                                                                                             |\n| ------------------------ | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `id`                     | string  | Uniuque segment id                                                                                                      |\n| `content_type`           | string  | Watched content type                                                                                                    |\n| `content_id`             | integer |                                                                                                                         |\n| `started_at`             | string  | Start date and time in ISO8601 format                                                                                   |\n| `finished_at`            | string  | Finish date and time in ISO8601 format                                                                                  |\n| `from`                   | integer | Start position of the view for videos in seconds                                                                        |\n| `to`                     | integer | End position of the view for videos in seconds                                                                                                                        |\n| `view_session_id`        | string  | Player session identifier. Every playing session has a different identifier.                                                                                                                        |\n| `client_id`              | integer | Device identifier                                                                                                                        |\n| `device_info`            | object  | Device information parsed from the viewer's user agent.                                                                                                                         |\n| `country`                | string  | The country of the playback                                                                                                                        |\n| `city`                   | string  | The city of the playback                                                                                                                        |\n| `is_mobile_view`         | boolean | If the playback happened on a mobile device the value is true                                                                                                                        |\n| `view_type`              | string  | `onsite` or `offsite`                                                                                                                        |\n\n\nExample of a success response:\n\n```json\n{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"last_activity\": \"2018-07-16T19:20:30+01:00\",\n                \"segments\": [\n                    {\n                        \"city\": \"Budapest\",\n                        \"client_id\": \"8776986273576598258658\",\n                        \"content_id\": 77569623,\n                        \"content_type\": \"live\",\n                        \"country\": \"HU\",\n                        \"finished_at\": \"2020-07-16T19:20:40+01:00\",\n                        \"from\": 0,\n                        \"id\": \"4bfc69b5-1320-4a44-a8d6-1fe1f397fb94\",\n                        \"is_mobile_view\": false,\n                        \"started_at\": \"2020-07-16T19:20:30+01:00\",\n                        \"to\": 0,\n                        \"view_session_id\": \"7f66d911:8b7aa82c\",\n                        \"view_type\": \"onsite\"\n                    }\n                ],\n                \"videos_watched\": 10,\n                \"viewer_identifier\": \"some.viewer@example.com\"\n            },\n            \"type\": \"Viewer\"\n        }\n    ],\n    \"pagination\": {\n        \"count\": 10,\n        \"first\": {\n            \"href\": \"/viewers?_page=1&_limit=1\"\n        },\n        \"last\": {\n            \"href\": \"/viewers?_page=10&_limit=1\"\n        },\n        \"next\": {\n            \"href\": \"/viewers?_page=2&_limit=1\"\n        },\n        \"prev\": null,\n        \"self\": {\n            \"href\": \"/viewers?_page=1&_limit=1\"\n        }\n    }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR CONDITIONS                                                                        |\n| ----------------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | Validation of the parameters has failed, the response contains a detailed explanation   |\n| 401 Unauthorized        | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | Resource was not found                                                                  |\n| 503 Service Unavailable | There is a temporary error on the server which makes it impossible to serve the request |\n\n## List of the unique viewers for a specific content type\n\nYou can get a list of every individual viewer for just a specific content type, such as live or on demand content, by\ncalling this endpoint. You can also look for a specific viewer by using the\n`viewer_identifier` parameter for matching an identifier or part of an\nidentifier.\n\n```\nGET https://analytics-api.video.ibm.com/v1/viewers/{content_type}\n```\n\n### Parameters\n\nThe query parameters for the GET request:\n\n| PARAMETER                  | TYPE    | IMPORTANCE | DESCRIPTION                                                                     |\n| -------------------------- | ------- | ---------- | ------------------------------------------------------------------------------- |\n| `content_type`             | string  | REQUIRED   | Type of the content, either `live` or `recorded`                                |\n| `content_id`               | integer | OPTIONAL   | A list of comma separated IDs                                                   |\n| `viewer_identifier`        | string  | OPTIONAL   | Filter for viewer identifiers containing this string                            |\n| `list_unfinished_segments` | boolean | OPTIONAL   | Flag for including unfinished segments in the result (value is true by default) |\n| `date_time_from`           | string  | OPTIONAL   | Start date and time for a period in ISO8601 format                              |\n| `date_time_to`             | string  | OPTIONAL   | End date and time for a period in ISO8601 format                                |\n| `_page`                    | integer | OPTIONAL   | Requested page number (value is 1 by default)                                   |\n| `_limit`                   | integer | OPTIONAL   | Requested page size (value is 10 by default, max. 10 000)                       | \n\n### Success response\n\nUpon success a response with HTTP status “200 OK” is returned with an array under a `data` key. The elements of the array contain every `viewer`\nmatching the query parameters. Each `viewer` viewer has the following attributes under the `attributes` key:\n\n| KEY                                 | TYPE    | DESCRIPTION                                                                                                             |\n| ----------------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `last_activity`                     | string  | Last activity recorded from the viewer                                                                                                                        |\n| `segments`                          | array   | An array of the viewers segments, which are matching the query parameters |\n| `videos_watched`                    | integer | Number of distinct medias from the segments array                                                                                                                          |\n| `viewer_identifier`                 | string  | Viewer identifier string. It can be an e-mail or any string representing a viewer |\n\nThe `segments` array contains the following key-value structure:\n\n| KEY                      | TYPE    | DESCRIPTION                                                                                                             |\n| ------------------------ | ------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `id`                     | string  | Uniuque segment id                                                                                                      |\n| `content_type`           | string  | Watched content type                                                                                                    |\n| `content_id`             | integer |                                                                                                                         |\n| `started_at`             | string  | Start date and time in ISO8601 format                                                                                   |\n| `finished_at`            | string  | Finish date and time in ISO8601 format                                                                                  |\n| `from`                   | integer | Start position of the view for videos in seconds                                                                        |\n| `to`                     | integer | End position of the view for videos in seconds                                                                                                                        |\n| `view_session_id`        | string  | Player session identifier. Every playing session has a different identifier.                                                                                                                        |\n| `client_id`              | integer | Device identifier                                                                                                                        |\n| `device_info`            | object  | Device information parsed from the viewer's user agent.                                                                                                                         |\n| `country`                | string  | The country of the playback                                                                                                                        |\n| `city`                   | string  | The city of the playback                                                                                                                        |\n| `is_mobile_view`         | boolean | If the playback happened on a mobile device the value is true                                                                                                                        |\n| `view_type`              | string  | `onsite` or `offsite`                                                                                                                        |\n\nExample of a success response:\n\n```json\n{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"last_activity\": \"2020-07-16T19:20:30+01:00\",\n                \"segments\": [\n                    {\n                        \"city\": \"Budapest\",\n                        \"client_id\": \"8776986273576598258658\",\n                        \"content_id\": 77569623,\n                        \"content_type\": \"live\",\n                        \"country\": \"HU\",\n                        \"finished_at\": \"2020-07-16T19:20:40+01:00\",\n                        \"from\": 0,\n                        \"id\": \"4bfc69b5-1320-4a44-a8d6-1fe1f397fb94\",\n                        \"is_mobile_view\": false,\n                        \"started_at\": \"2020-07-16T19:20:30+01:00\",\n                        \"to\": 0,\n                        \"view_session_id\": \"7f66d911:8b7aa82c\",\n                        \"view_type\": \"onsite\"\n                    }\n                ],\n                \"videos_watched\": 10,\n                \"viewer_identifier\": \"some.viewer@example.com\"\n            },\n            \"type\": \"Viewer\"\n        }\n    ],\n    \"pagination\": {\n        \"count\": 10,\n        \"first\": {\n            \"href\": \"/viewers/live?_page=1&_limit=1\"\n        },\n        \"last\": {\n            \"href\": \"/viewers/live?_page=10&_limit=1\"\n        },\n        \"next\": {\n            \"href\": \"/viewers/live?_page=2&_limit=1\"\n        },\n        \"prev\": null,\n        \"self\": {\n            \"href\": \"/viewers/live?_page=1&_limit=1\"\n        }\n    }\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR CONDITIONS                                                                        |\n| ----------------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | Validation of the parameters has failed, the response contains a detailed explanation   |\n| 401 Unauthorized        | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | Resource was not found                                                                  |\n| 503 Service Unavailable | There is a temporary error on the server which makes it impossible to serve the request |\n","fileAbsolutePath":"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/src/pages/analytics-api/viewers.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2203542295","2746626797","3037994772","559098832","768070550"]}