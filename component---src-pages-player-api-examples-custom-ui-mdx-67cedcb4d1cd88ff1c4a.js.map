{"version":3,"file":"component---src-pages-player-api-examples-custom-ui-mdx-67cedcb4d1cd88ff1c4a.js","mappings":"oQAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,IAACR,EAASS,OAAAC,OAAA,GAAKX,EAAiBM,EAAK,CAAED,WAAYA,EAAYO,QAAQ,eAG5EH,EAAAA,EAAAA,IAAA,8FACAA,EAAAA,EAAAA,IAAA,8FACAA,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAII,WAAW,MAAI,yGAA0GJ,EAAAA,EAAAA,IAAA,cAAYI,WAAW,MAAI,WAAyB,sEACjLJ,EAAAA,EAAAA,IAAA,MAAII,WAAW,OAAKJ,EAAAA,EAAAA,IAAA,cAAYI,WAAW,MAAI,YAA0B,SAASJ,EAAAA,EAAAA,IAAA,cAAYI,WAAW,MAAI,YAA0B,uHACvIJ,EAAAA,EAAAA,IAAA,MAAII,WAAW,MAAI,uEAAwEJ,EAAAA,EAAAA,IAAA,cAAYI,WAAW,MAAI,kCAAgD,sEACtKJ,EAAAA,EAAAA,IAAA,MAAII,WAAW,MAAI,0JAA2JJ,EAAAA,EAAAA,IAAA,cAAYI,WAAW,MAAI,oBAAkC,6HAA6HJ,EAAAA,EAAAA,IAAA,KAAGI,WAAW,KAClX,KAAQ,oFAAkF,uFAGhGJ,EAAAA,EAAAA,IAAA,sBAEAA,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,IAAI,yDAAyDC,SAAU,CAAC,UAAWJ,QAAQ,gBAG5G,CAEAT,EAAWc,gBAAiB,C","sources":["webpack://example/./src/pages/player-api-examples/custom-ui.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport EmbedPlayer from '../../components/EmbedPlayer';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`This example demonstrates how you can build a custom UI based on our API calls.`}</h3>\n    <p>{`There are some important technical information about a custom UI implementation:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`there is no progress event from the player, so you should query the progress periodically (using the `}<inlineCode parentName=\"li\">{`playing`}</inlineCode>{` event to disable unnecessary querying will increase performance)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`progress`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`duration`}</inlineCode>{` is in seconds, so every percentage related progress data (like a seekbar) should be calculated from this two data`}</li>\n      <li parentName=\"ul\">{`if you would like to build a full custom UI on the player, use the `}<inlineCode parentName=\"li\">{`controls=false&showtitle=false`}</inlineCode>{` URL params to hide the default IBM Video Streaming UI components`}</li>\n      <li parentName=\"ul\">{`autoplay permission must be delegated on cross-origin iframes since Chrome 66 for video elements by policy. Therefore, the iframe tag must contain an `}<inlineCode parentName=\"li\">{`allow=\"autoplay\"`}</inlineCode>{` feature policy attribute to allow play calls from a cross-orgin parent to the player iframe. For more information visit `}<a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#iframe\"\n        }}>{`https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#iframe`}</a></li>\n    </ul>\n    <h3>{`Example`}</h3>\n\n    <EmbedPlayer src=\"https://video.ibm.com/embed/recorded/81056340?volume=0\" controls={['custom']} mdxType=\"EmbedPlayer\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","parentName","EmbedPlayer","src","controls","isMDXComponent"],"sourceRoot":""}