{"version":3,"file":"component---src-pages-player-api-examples-custom-ui-mdx-29bebadd989fb666e4f1.js","mappings":"oQASaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,sGACA,sGACA,mBACE,cAAIC,WAAW,MAAf,yGAA6H,sBAAYA,WAAW,MAAvB,WAA7H,sEACA,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,YAApB,SAAkF,sBAAYA,WAAW,MAAvB,YAAlF,uHACA,cAAIA,WAAW,MAAf,uEAA2F,sBAAYA,WAAW,MAAvB,kCAA3F,sEACA,cAAIA,WAAW,MAAf,0JAA8K,sBAAYA,WAAW,MAAvB,oBAA9K,6HAAwW,aAAGA,WAAW,KAClX,KAAQ,oFAD4V,uFAI1W,8BAEA,QAAC,IAAD,CAAaC,IAAI,0DAA0DC,SAAU,CAAC,UAAWH,QAAQ,gBAG5G,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://example/./src/pages/player-api-examples/custom-ui.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport EmbedPlayer from '../../components/EmbedPlayer';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`This example demonstrates how you can build a custom UI based on our API calls.`}</h3>\n    <p>{`There are some important technical information about a custom UI implementation:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`there is no progress event from the player, so you should query the progress periodically (using the `}<inlineCode parentName=\"li\">{`playing`}</inlineCode>{` event to disable unnecessary querying will increase performance)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`progress`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`duration`}</inlineCode>{` is in seconds, so every percentage related progress data (like a seekbar) should be calculated from this two data`}</li>\n      <li parentName=\"ul\">{`if you would like to build a full custom UI on the player, use the `}<inlineCode parentName=\"li\">{`controls=false&showtitle=false`}</inlineCode>{` URL params to hide the default IBM Video Streaming UI components`}</li>\n      <li parentName=\"ul\">{`autoplay permission must be delegated on cross-origin iframes since Chrome 66 for video elements by policy. Therefore, the iframe tag must contain an `}<inlineCode parentName=\"li\">{`allow=\"autoplay\"`}</inlineCode>{` feature policy attribute to allow play calls from a cross-orgin parent to the player iframe. For more information visit `}<a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#iframe\"\n        }}>{`https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#iframe`}</a></li>\n    </ul>\n    <h3>{`Example`}</h3>\n\n    <EmbedPlayer src=\"https://www.ustream.tv/embed/recorded/81056340?volume=0\" controls={['custom']} mdxType=\"EmbedPlayer\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","controls","isMDXComponent"],"sourceRoot":""}