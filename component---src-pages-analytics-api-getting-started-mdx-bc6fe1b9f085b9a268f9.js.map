{"version":3,"file":"component---src-pages-analytics-api-getting-started-mdx-bc6fe1b9f085b9a268f9.js","mappings":"yPAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,qCACA,kGACF,sBAAYC,WAAW,KAAvB,iBADE,uCAEF,sBAAYA,WAAW,KAAvB,8EAFE,uDAIA,iDACA,yFAA2E,sBAAYA,WAAW,KAAvB,cAA3E,kBAAmJ,sBAAYA,WAAW,KAAvB,OAAnJ,MAAwM,kBAAQA,WAAW,KAAnB,wDACxM,2DACF,aAAGA,WAAW,IACR,KAAQ,8BADd,0BAGE,4DAA8C,cAAIA,WAAW,KAAf,sBAA9C,MACA,kCACA,8FAAgF,sBAAYA,WAAW,KAAvB,6BAAhF,6DAEA,kCACA,mBACE,cAAIA,WAAW,OAAK,cAAIA,WAAW,MAAf,SAApB,0EACA,cAAIA,WAAW,OAAK,cAAIA,WAAW,MAAf,gBAApB,kGAEA,cAAIA,WAAW,OAAK,cAAIA,WAAW,MAAf,cAApB,oGAEA,cAAIA,WAAW,OAAK,cAAIA,WAAW,MAAf,WAApB,+CAEF,qCACA,2GAGH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://example/./src/pages/analytics-api-getting-started.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Authentication`}</h2>\n    <p>{`The API uses JWT token for authentication. The API accepts the token in the\n`}<inlineCode parentName=\"p\">{`Authorization`}</inlineCode>{` header, in the following format:\n`}<inlineCode parentName=\"p\">{`Authorization: eyJhbGciOiJIUzI1NiIsInR5cCI6Ik...0RMHrHDcEfxjoYZgeFONFh7HgQ`}</inlineCode>{`\nThis header must be included with every request.`}</p>\n    <h2>{`Obtaining the Access token`}</h2>\n    <p>{`You can get JWT token from the OAuth2 token endpoint by setting the `}<inlineCode parentName=\"p\">{`token_type`}</inlineCode>{` parameter to `}<inlineCode parentName=\"p\">{`jwt`}</inlineCode>{`. `}<strong parentName=\"p\">{`This parameter must be set as HTTP POST parameter.`}</strong></p>\n    <p>{`The OAuth2 flows are described here:\n`}<a parentName=\"p\" {...{\n        \"href\": \"/api-basics-authentication\"\n      }}>{`Basic Authentication`}</a></p>\n    <p>{`The recommended authentication flow is `}<em parentName=\"p\">{`Client credentials`}</em>{`.`}</p>\n    <h2>{`Time format`}</h2>\n    <p>{`Every time field provided by the API is formatted by ISO8601 format (eg. `}<inlineCode parentName=\"p\">{`2018-07-16T19:20:30+01:00`}</inlineCode>{`).\nThe API also accepts parameters in this format only.`}</p>\n    <h2>{`Terminology`}</h2>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`media`}</em>{`: Media is a common word for both live broadcasts and recorded videos`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`content type`}</em>{`: The API has knowledge of two types of content that are live\nbroadcasts and recorded videos`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`content id`}</em>{`: A numeric identifier of the media. For live it means channel ID,\nfor video it means video ID`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`segment`}</em>{`: A part of the media watched by the user`}</li>\n    </ul>\n    <h2>{`Response times`}</h2>\n    <p>{`Depending on your query and the underlying data size the response might take a minute.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}