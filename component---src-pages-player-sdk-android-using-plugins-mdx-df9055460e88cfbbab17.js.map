{"version":3,"file":"component---src-pages-player-sdk-android-using-plugins-mdx-df9055460e88cfbbab17.js","mappings":"4LAOsBA,E,4DADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAImB,qBAJX,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5BM,EAAAA,EAAAA,IAAA,MAASH,EAClB,GAEMI,EAAc,CAClBN,aAAAA,GAEIO,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGT,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,IAACE,EAASO,OAAAC,OAAA,GAAKT,EAAiBJ,EAAK,CAAES,WAAYA,EAAYK,QAAQ,eAG5EX,EAAAA,EAAAA,IAACJ,EAAkB,CAACgB,KAAK,UAAUD,QAAQ,uBACzCX,EAAAA,EAAAA,IAAA,0aAAoaA,EAAAA,EAAAA,IAAA,KAAGa,WAAW,IAC9a,KAAQ,kEAAgE,yBAC1C,iFAAiFb,EAAAA,EAAAA,IAAA,KAAGa,WAAW,IAC7H,KAAQ,0BAAwB,iBACV,oCAE5Bb,EAAAA,EAAAA,IAAA,kPACmFA,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,gEAA8E,gEACpIb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,mDAAiE,iKACrDb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,kDAAgE,+CACjJb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,cAA4B,MAC5Fb,EAAAA,EAAAA,IAAA,qUAEWA,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,mBAAiC,OAAOb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,mBAAiC,sFAC9Hb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,qBAAmC,4DAA4Db,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,iCAA+C,sBAC5Mb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,qBAAmC,oEAAoEb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,mBAAiC,uEAE5Lb,EAAAA,EAAAA,IAAA,sCAAgCA,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,qBAAmC,sBAAsBb,EAAAA,EAAAA,IAAA,cAAYa,WAAW,KAAG,0BAAwC,qNAE7Kb,EAAAA,EAAAA,IAAA,UAAQa,WAAW,KAAG,sBAAgC,cAC9Db,EAAAA,EAAAA,IAAA,yBACAA,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,UAAQa,WAAW,KAAG,sBACzBb,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,MAAIa,WAAW,KAAG,2GAGzB,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://example/./src/pages/player-sdk-android/using-plugins.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`Please note that as of November 1st, 2022 IBM has discontinued support for the Video Streaming Player SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications and delete them from your archives. You may find information for alternative methods to create customized viewer experiences with our APIs on our `}<a parentName=\"p\" {...{\n          \"href\": \"https://developers.video.ibm.com/player-api-examples/custom-ui\"\n        }}>{`Developer Tools pages`}</a>{`. Users may also continue to access Video Streaming through the web, both at `}<a parentName=\"p\" {...{\n          \"href\": \"https://video.ibm.com/\"\n        }}>{`video.ibm.com`}</a>{` and through Embedded modules.`}</p>\n    </InlineNotification>\n    <p>{`IBM Video Streaming Player SDK version 1.1.0 introduced a plugin system which enables you to extend the media player with additional features.\nPlugins will be provided by IBM and must be provided during player initialization in `}<inlineCode parentName=\"p\">{`Player.initWithContent(ContentDescriptor, MediaPlayerModule)`}</inlineCode>{`.\nThese extensions may require different player views than `}<inlineCode parentName=\"p\">{`com.ibm.video.android.player.android.PlayerView`}</inlineCode>{`. PlayerView requirements for a plugin will always be stated\nin this documentation but can also be queried from the MediaPlayerModule instance itself using `}<inlineCode parentName=\"p\">{`MediaPlayerModule.getSupportedPlayerViewType()`}</inlineCode>{`.\nMake sure to always use the appropriate `}<inlineCode parentName=\"p\">{`PlayerView`}</inlineCode>{`.`}</p>\n    <p>{`Creation of the plugin is the user’s responsibility, use the constructor of the desired plugin, provide appropriate parameters and set listeners.\nWhen a plugin is passed to a Player instance it will be retained across configuration changes, however the listeners the user provided are not subject\nto the usual `}<inlineCode parentName=\"p\">{`Player.attach()`}</inlineCode>{` / `}<inlineCode parentName=\"p\">{`Player.detach()`}</inlineCode>{` working. The user needs to manually set and remove those listeners.\nThe current `}<inlineCode parentName=\"p\">{`MediaPlayerModule`}</inlineCode>{` in use can be retrieved from the player instance using `}<inlineCode parentName=\"p\">{`Player.getMediaPlayerPlugin()`}</inlineCode>{` which returns\na `}<inlineCode parentName=\"p\">{`MediaPlayerModule`}</inlineCode>{` that will be cast to the appropriate class that was set during `}<inlineCode parentName=\"p\">{`initWithContent`}</inlineCode>{`. The user must know which MediaPlayerModule was\nset during init.`}</p>\n    <p>{`Please note that while a `}<inlineCode parentName=\"p\">{`MediaPlayerPlugin`}</inlineCode>{` provided through `}<inlineCode parentName=\"p\">{`Player.initWithContent`}</inlineCode>{` is retained across configuration changes,\nthe plugin itself might NOT support configuration changes at all due to plugin specific reasons. This will always be stated in the plugin’s documentation\nunder the `}<strong parentName=\"p\">{`Plugin limitations`}</strong>{` section.`}</p>\n    <h2>{`Ads Plugin`}</h2>\n    <p><strong parentName=\"p\">{`IMPORTANT NOTICE`}</strong></p>\n    <p><em parentName=\"p\">{`Ads plugin has been sunset and removed from the SDK. Support is no longer provided for this component.`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineNotification","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","kind","parentName","isMDXComponent"],"sourceRoot":""}