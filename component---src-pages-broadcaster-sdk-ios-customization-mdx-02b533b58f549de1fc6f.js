"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[6369],{96636:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return m}});var o,n=a(63366),r=(a(67294),a(64983)),i=a(56928),d=["components"],l={},s=(o="InlineNotification",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),p={_frontmatter:l},u=i.Z;function m(e){var t=e.components,a=(0,n.Z)(e,d);return(0,r.kt)(u,Object.assign({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(s,{kind:"warning",mdxType:"InlineNotification"},(0,r.kt)("p",null,"Please note that as of November 1st, 2022 IBM has discontinued support for the Watson Media Broadcaster SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications to access the broadcasting functionality, and delete them from your archives. You may find information on alternative methods to broadcast live video to your channel on our ",(0,r.kt)("a",{parentName:"p",href:"https://support.video.ibm.com/hc/en-us/categories/200545448-Broadcasting-on-IBM-Watson-Media"},"Support Center"),".")),(0,r.kt)("h2",null,"Implementing a custom frame source"),(0,r.kt)("p",null,"You can create your own frame source by implementing ",(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaFrameSource")," and passing to ",(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaBroadcaster")," in its init method. Here are the main components of the protocol:"),(0,r.kt)("h3",null,"Start and stop capturing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"startCaptureWithCompletion:completion")," will called by ",(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaBroadcaster")," to start to emitting frames. Call completion block once the frame sending is started or there was an error during the initialization process. If completion block returns with error ",(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaBroadcaster")," state will set to ",(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaVideoBroadcasterStateInitial")," and error will be reported via ",(0,r.kt)("inlineCode",{parentName:"p"},"broadcaster:didFailWithError:"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"stopCapture")," calls to the stop frame source."))),(0,r.kt)("h3",null,"Preferred output format"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaCaptureConfig *preferredCaptureConfig")," describes ideal output format of video and audio frames that source should send to the broadcaster. It may change during the session. Note that sending video or audio frames with different format will cause conversion. Video frames with different aspect ratio will be scaled to fit to the preferred resolution with preserved original aspect ratio."),(0,r.kt)("h4",null,"Frame source listener"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"id<IBMWatsonMediaFrameSourceListener> delegate")," provides methods to send audio or video frames, reporting error or custom events to the broadcaster."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If a video or audio frame was produced you can send to the broadcaster with ",(0,r.kt)("inlineCode",{parentName:"p"},"frameSource:didOutputSampleBuffer:")," (both video and audio) or ",(0,r.kt)("inlineCode",{parentName:"p"},"frameSource:didOutputPixelBuffer:timestamp:"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If an error happened and capturing cannot be continued you should call ",(0,r.kt)("inlineCode",{parentName:"p"},"frameSource:didFailWithError:"),". Broadcast will stop and ",(0,r.kt)("inlineCode",{parentName:"p"},"IBMWatsonMediaBroadcaster")," will send a ",(0,r.kt)("inlineCode",{parentName:"p"},"didFailedWithError:")," to its delegate."))))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-broadcaster-sdk-ios-customization-mdx-02b533b58f549de1fc6f.js.map