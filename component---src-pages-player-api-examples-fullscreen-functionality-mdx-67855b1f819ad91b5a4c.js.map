{"version":3,"file":"component---src-pages-player-api-examples-fullscreen-functionality-mdx-67855b1f819ad91b5a4c.js","mappings":"oQAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,IAACR,EAASS,OAAAC,OAAA,GAAKX,EAAiBM,EAAK,CAAED,WAAYA,EAAYO,QAAQ,eAI5EH,EAAAA,EAAAA,IAAA,mHAA6GA,EAAAA,EAAAA,IAAA,KAAGI,WAAW,IACvH,KAAQ,qFAAmF,wBAC9D,MACjCJ,EAAAA,EAAAA,IAAA,8BACAA,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAII,WAAW,MAAI,6EACnBJ,EAAAA,EAAAA,IAAA,MAAII,WAAW,MAAI,uCACnBJ,EAAAA,EAAAA,IAAA,MAAII,WAAW,MAAI,kFAErBJ,EAAAA,EAAAA,IAAA,sBACAA,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,IAAI,gEAAgEC,SAAU,CAAC,cAAeJ,QAAQ,iBACnHH,EAAAA,EAAAA,IAAA,yBACAA,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAMI,WAAW,MAClB,UAAa,eAAa,4vDAoD9BJ,EAAAA,EAAAA,IAAA,mBACAA,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAMI,WAAW,MAClB,UAAa,iBAAe,yVAchCJ,EAAAA,EAAAA,IAAA,kBACAA,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAMI,WAAW,MAClB,UAAa,gBAAc,wSAwBnC,CAEAV,EAAWc,gBAAiB,C","sources":["webpack://example/./src/pages/player-api-examples/fullscreen-functionality.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport EmbedPlayer from '../../components/EmbedPlayer';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Third party player controls should implement the fullscreen functionality on the client side with the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\"\n      }}>{`HTML5 Fullscreen API`}</a>{`.`}</p>\n    <h3>{`Necessary steps`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`switch your embed container to fullscreen mode with HTML5 FullScreen API`}</li>\n      <li parentName=\"ul\">{`handle the iframe size accordingly`}</li>\n      <li parentName=\"ul\">{`IBM Video Streaming embed will adopt to the resized iframe size responsively`}</li>\n    </ul>\n    <h3>{`Example`}</h3>\n    <EmbedPlayer src=\"https://video.ibm.com/embed/recorded/133979911?hideFullscreen\" controls={['fullscreen']} mdxType=\"EmbedPlayer\" />\n    <h3>{`Javascript`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`var fullScreenBtn = document.getElementById('fullScreenBtn');\nvar container = document.getElementById('Container');\n\ndocument.addEventListener(\"fullscreenchange\",changeHandler);\ndocument.addEventListener(\"webkitfullscreenchange\",changeHandler);\ndocument.addEventListener(\"mozfullscreenchange\",changeHandler);\ndocument.addEventListener(\"MSFullscreenChange\", changeHandler, false);\n\n// trigger fullscreen change on our custom button click\nfullScreenBtn.addEventListener('click',onFullScreenBtnClick);\n\n// check if the current state is fullscreen or not\nfunction isFullScreen() {\n  return document.fullScreen ||\n    document.webkitIsFullScreen ||\n    document.mozfullScreen ||\n    document.msFullscreenElement;\n}\n\n// change everything on other change events too\nfunction changeHandler () {\n  container.className = isFullScreen() ? 'fullscreen' : '';\n}\n\n// fullscreen button event handler\nfunction onFullScreenBtnClick () {\n  // if we are in fullscreen, then exit\n  if (isFullScreen()) {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.mozExitFullScreen) {\n      document.mozExitFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n    // if we are in non-fullscreen mode, open it\n  } else {\n    if (container.requestFullscreen) {\n      container.requestFullscreen();\n    } else if (container.webkitRequestFullscreen) {\n      container.webkitRequestFullscreen();\n    } else if (container.mozRequestFullScreen) {\n      container.mozRequestFullScreen();\n    } else if (container.msRequestFullscreen) {\n      container.msRequestFullscreen();\n    }\n  }\n}\n`}</code></pre>\n    <h3>{`HTML`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div id=\"Container\">\n  <iframe\n    id=\"UstreamIframe\"\n    width=\"100%\" height=\"100%\"\n    src=\"https://video.ibm.com/embed/recorded/133979911?hideFullscreen\"\n    frameborder=\"0\"\n    allowfullscreen\n    referrerpolicy=\"no-referrer-when-downgrade\"\n  >\n  </iframe>\n  <div id=\"fullScreenBtn\"> custom fullscreen button </div>\n</div>\n`}</code></pre>\n    <h3>{`CSS`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`#Container {\n  position: relative;\n  width: 640px;\n  height: 390px;\n}\n\n#Container.fullscreen {\n  width: 100%;\n  height: 100%;\n}\n\n#fullScreenBtn {\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  padding: 5px;\n  background: #38f;\n  color: #fff;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","parentName","EmbedPlayer","src","controls","isMDXComponent"],"sourceRoot":""}