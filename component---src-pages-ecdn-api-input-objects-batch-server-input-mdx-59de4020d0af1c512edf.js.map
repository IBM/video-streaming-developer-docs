{"version":3,"file":"component---src-pages-ecdn-api-input-objects-batch-server-input-mdx-59de4020d0af1c512edf.js","mappings":"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","sources":["webpack://example/./src/pages/ecdn-api-input-objects/BatchServerInput.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport GQLCodeSnippet, { GQLOpen, GQLClose, GQLLine, GQLTab, GQLName, GQLKeyword, GQLAttribute, GQLOperator, GQLComment, GQLLink } from \"../../components/GQLCodeSnippet/GQLCodeSnippet\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Batch input for server creation/modification.`}</p>\n    <GQLCodeSnippet mdxType=\"GQLCodeSnippet\">\n      <GQLLine mdxType=\"GQLLine\"><GQLKeyword mdxType=\"GQLKeyword\">type</GQLKeyword> BatchServerInput <GQLOpen mdxType=\"GQLOpen\" /></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Hostname of server. FQDN = hostname + domain suffix of customer.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">hostname</GQLName>: <GQLLink href=\"/ecdn-api-scalars/String\" mdxType=\"GQLLink\">String</GQLLink><GQLOperator mdxType=\"GQLOperator\">!</GQLOperator></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># ID of location this server belongs to.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">location</GQLName>: <GQLLink href=\"/ecdn-api-scalars/ID\" mdxType=\"GQLLink\">ID</GQLLink><GQLOperator mdxType=\"GQLOperator\">!</GQLOperator></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Which hypervisor will this server run on.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">hypervisor</GQLName>: <GQLLink href=\"/ecdn-api-enums/Hypervisor\" mdxType=\"GQLLink\">Hypervisor</GQLLink><GQLOperator mdxType=\"GQLOperator\">!</GQLOperator></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Network interfaces of ECDN server.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">interfaces</GQLName>: [<GQLLink href=\"/ecdn-api-input-objects/InterfaceInput\" mdxType=\"GQLLink\">InterfaceInput</GQLLink><GQLOperator mdxType=\"GQLOperator\">!</GQLOperator>]<GQLOperator mdxType=\"GQLOperator\">!</GQLOperator></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># DNS servers used for name resolutions. Google resolvers will be used if omitted.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">dnsServers</GQLName>: [<GQLLink href=\"/ecdn-api-scalars/ServerAddress\" mdxType=\"GQLLink\">ServerAddress</GQLLink><GQLOperator mdxType=\"GQLOperator\">!</GQLOperator>]</GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Address of NTP servers used by ECDN server. Ubuntu NTP pools will be used if omitted.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">ntpServers</GQLName>: [<GQLLink href=\"/ecdn-api-scalars/ServerAddress\" mdxType=\"GQLLink\">ServerAddress</GQLLink><GQLOperator mdxType=\"GQLOperator\">!</GQLOperator>]</GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Log collector's address. Omit if log forwarding is disabled.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">logCollector</GQLName>: <GQLLink href=\"/ecdn-api-scalars/TransportAddress\" mdxType=\"GQLLink\">TransportAddress</GQLLink></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Community string of SNMP v2c. Omit if SNMP polling is disabled.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">snmpCommunityString</GQLName>: <GQLLink href=\"/ecdn-api-scalars/String\" mdxType=\"GQLLink\">String</GQLLink></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLComment mdxType=\"GQLComment\"># Is remote assistance enabled on server. Enabled by default.</GQLComment></GQLLine>\n\t<GQLLine mdxType=\"GQLLine\"><GQLTab mdxType=\"GQLTab\" /><GQLName mdxType=\"GQLName\">remoteAssistanceEnabled</GQLName>: <GQLLink href=\"/ecdn-api-scalars/Boolean\" mdxType=\"GQLLink\">Boolean</GQLLink></GQLLine>\n      <GQLLine mdxType=\"GQLLine\"> </GQLLine>\n      <GQLLine mdxType=\"GQLLine\"><GQLClose mdxType=\"GQLClose\" /></GQLLine>\n    </GQLCodeSnippet>\n    <h2>{`Fields`}</h2>\n    <h3>{`hostname: `}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/String\"\n      }}>{`String`}</a>{`!`}</h3>\n    <p>{`Hostname of server. FQDN = hostname + domain suffix of customer.`}</p>\n    <h3>{`location: `}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/ID\"\n      }}>{`ID`}</a>{`!`}</h3>\n    <p>{`ID of location this server belongs to.`}</p>\n    <h3>{`hypervisor: `}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-enums/Hypervisor\"\n      }}>{`Hypervisor`}</a>{`!`}</h3>\n    <p>{`Which hypervisor will this server run on.`}</p>\n    <h3>{`interfaces: [`}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-input-objects/InterfaceInput\"\n      }}>{`InterfaceInput`}</a>{`!]!`}</h3>\n    <p>{`Network interfaces of ECDN server.`}</p>\n    <h3>{`dnsServers: [`}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/ServerAddress\"\n      }}>{`ServerAddress`}</a>{`!]`}</h3>\n    <p>{`DNS servers used for name resolutions. Google resolvers will be used if omitted.`}</p>\n    <h3>{`ntpServers: [`}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/ServerAddress\"\n      }}>{`ServerAddress`}</a>{`!]`}</h3>\n    <p>{`Address of NTP servers used by ECDN server. Ubuntu NTP pools will be used if omitted.`}</p>\n    <h3>{`logCollector: `}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/TransportAddress\"\n      }}>{`TransportAddress`}</a></h3>\n    <p>{`Log collector’s address. Omit if log forwarding is disabled.`}</p>\n    <h3>{`snmpCommunityString: `}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/String\"\n      }}>{`String`}</a></h3>\n    <p>{`Community string of SNMP v2c. Omit if SNMP polling is disabled.`}</p>\n    <h3>{`remoteAssistanceEnabled: `}<a parentName=\"h3\" {...{\n        \"href\": \"/ecdn-api-scalars/Boolean\"\n      }}>{`Boolean`}</a></h3>\n    <p>{`Is remote assistance enabled on server. Enabled by default.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","href","parentName","isMDXComponent"],"sourceRoot":""}