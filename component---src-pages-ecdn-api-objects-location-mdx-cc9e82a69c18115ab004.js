"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[1429],{7615:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return c}});var a=n(63366),i=(n(67294),n(64983)),o=n(8152),m=n(81168),d=["components"],p={},r={_frontmatter:p},y=o.Z;function c(e){var t=e.components,n=(0,a.Z)(e,d);return(0,i.kt)(y,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A customerâ€™s location."),(0,i.kt)(m.ZP,{mdxType:"GQLCodeSnippet"},(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.lC,{mdxType:"GQLKeyword"},"type")," Location ",(0,i.kt)(m.dH,{mdxType:"GQLOpen"})),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# ID of location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"id"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/ID",mdxType:"GQLLink"},"ID"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Name of location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"name"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/String",mdxType:"GQLLink"},"String"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Number of servers in location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"numberOfServers"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Int",mdxType:"GQLLink"},"Int"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Servers in location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"servers"),": [",(0,i.kt)(m.xI,{href:"/ecdn-api-objects/Server",mdxType:"GQLLink"},"Server"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!"),"]",(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Parent location or region of location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"parent"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-unions/LocationsParent",mdxType:"GQLLink"},"LocationsParent"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# (direct) Child locations of location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"children"),": [",(0,i.kt)(m.xI,{href:"/ecdn-api-objects/Location",mdxType:"GQLLink"},"Location"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!"),"]",(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Depth of (deepest possible) child location chain (starting from this location).")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# * A location without any children has children a depth of 0.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# * A location with a child that doesn't have any children has a depth of 1.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# * A location that has at least one child with children has a depth of 2.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"childrenDepth"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Int",mdxType:"GQLLink"},"Int"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# The maximum children depth this location can have. A maximum of 3 locations can be chained")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# together. Therefore if a location:")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# * Is a top-level one, the maximum children depth is 2")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"#   (it can have child locations with children).")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# * Has a top-level location as parent: the maximum children depth is 1")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"#   (can have children, but they cannot have additional children).")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# * Has a parent location with a parent location: the maximum children depth is 0")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"#   (cannot have children, would exceed the overall -3- depth limit).")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"childrenDepthLimit"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Int",mdxType:"GQLLink"},"Int"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# External IP ranges of location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"externalRanges"),": [",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/IPv4Range",mdxType:"GQLLink"},"IPv4Range"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!"),"]",(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Whether external ranges are inherited from parent location.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"inheritExternalRanges"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Restriction for client connections. Null if there aren't any restrictions.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"clientRestriction"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-objects/ClientRestriction",mdxType:"GQLLink"},"ClientRestriction")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Whether clients can connect to servers in this location or not.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"clientConnectionsEnabled"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Whether clients can fall back to external CDNs or not.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"cdnFallbackEnabled"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Whether management traffic of servers in location are proxied through parent servers.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Video traffic is proxied through parent servers in all cases.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Management traffic can only be proxied through ECDN servers (i.e: not through midgress),")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# therefore this can only be enabled in child locations.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"parentProxyEnabled"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-scalars/Boolean",mdxType:"GQLLink"},"Boolean"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# What time was this location created and by whom.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"created"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-objects/RecordedAction",mdxType:"GQLLink"},"RecordedAction"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.nV,{mdxType:"GQLComment"},"# Last time this location was modified and by whom.")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.cy,{mdxType:"GQLTab"}),(0,i.kt)(m.Cv,{mdxType:"GQLName"},"modified"),": ",(0,i.kt)(m.xI,{href:"/ecdn-api-objects/RecordedAction",mdxType:"GQLLink"},"RecordedAction"),(0,i.kt)(m.AW,{mdxType:"GQLOperator"},"!")),(0,i.kt)(m.Ny,{mdxType:"GQLLine"}," "),(0,i.kt)(m.Ny,{mdxType:"GQLLine"},(0,i.kt)(m.Ju,{mdxType:"GQLClose"}))),(0,i.kt)("h2",null,"Fields"),(0,i.kt)("h3",null,"id: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/ID"},"ID"),"!"),(0,i.kt)("p",null,"ID of location."),(0,i.kt)("h3",null,"name: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/String"},"String"),"!"),(0,i.kt)("p",null,"Name of location."),(0,i.kt)("h3",null,"numberOfServers: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Int"},"Int"),"!"),(0,i.kt)("p",null,"Number of servers in location."),(0,i.kt)("h3",null,"servers: [",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-objects/Server"},"Server"),"!]!"),(0,i.kt)("p",null,"Servers in location."),(0,i.kt)("h3",null,"parent: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-unions/LocationsParent"},"LocationsParent"),"!"),(0,i.kt)("p",null,"Parent location or region of location."),(0,i.kt)("h3",null,"children: [",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-objects/Location"},"Location"),"!]!"),(0,i.kt)("p",null,"(direct) Child locations of location."),(0,i.kt)("h3",null,"childrenDepth: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Int"},"Int"),"!"),(0,i.kt)("p",null,"Depth of (deepest possible) child location chain (starting from this location)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A location without any children has children a depth of 0."),(0,i.kt)("li",{parentName:"ul"},"A location with a child that doesnâ€™t have any children has a depth of 1."),(0,i.kt)("li",{parentName:"ul"},"A location that has at least one child with children has a depth of 2.")),(0,i.kt)("h3",null,"childrenDepthLimit: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Int"},"Int"),"!"),(0,i.kt)("p",null,"The maximum children depth this location can have. A maximum of 3 locations can be chained\ntogether. Therefore if a location:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Is a top-level one, the maximum children depth is 2\n(it can have child locations with children)."),(0,i.kt)("li",{parentName:"ul"},"Has a top-level location as parent: the maximum children depth is 1\n(can have children, but they cannot have additional children)."),(0,i.kt)("li",{parentName:"ul"},"Has a parent location with a parent location: the maximum children depth is 0\n(cannot have children, would exceed the overall -3- depth limit).")),(0,i.kt)("h3",null,"externalRanges: [",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/IPv4Range"},"IPv4Range"),"!]!"),(0,i.kt)("p",null,"External IP ranges of location."),(0,i.kt)("h3",null,"inheritExternalRanges: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Boolean"},"Boolean"),"!"),(0,i.kt)("p",null,"Whether external ranges are inherited from parent location."),(0,i.kt)("h3",null,"clientRestriction: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-objects/ClientRestriction"},"ClientRestriction")),(0,i.kt)("p",null,"Restriction for client connections. Null if there arenâ€™t any restrictions."),(0,i.kt)("h3",null,"clientConnectionsEnabled: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Boolean"},"Boolean"),"!"),(0,i.kt)("p",null,"Whether clients can connect to servers in this location or not."),(0,i.kt)("h3",null,"cdnFallbackEnabled: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Boolean"},"Boolean"),"!"),(0,i.kt)("p",null,"Whether clients can fall back to external CDNs or not."),(0,i.kt)("h3",null,"parentProxyEnabled: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-scalars/Boolean"},"Boolean"),"!"),(0,i.kt)("p",null,"Whether management traffic of servers in location are proxied through parent servers.\nVideo traffic is proxied through parent servers in all cases.\nManagement traffic can only be proxied through ECDN servers (i.e: not through midgress),\ntherefore this can only be enabled in child locations."),(0,i.kt)("h3",null,"created: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-objects/RecordedAction"},"RecordedAction"),"!"),(0,i.kt)("p",null,"What time was this location created and by whom."),(0,i.kt)("h3",null,"modified: ",(0,i.kt)("a",{parentName:"h3",href:"/ecdn-api-objects/RecordedAction"},"RecordedAction"),"!"),(0,i.kt)("p",null,"Last time this location was modified and by whom."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ecdn-api-objects-location-mdx-cc9e82a69c18115ab004.js.map