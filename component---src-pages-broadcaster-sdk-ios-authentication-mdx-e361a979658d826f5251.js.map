{"version":3,"file":"component---src-pages-broadcaster-sdk-ios-authentication-mdx-e361a979658d826f5251.js","mappings":"4LAUsBA,E,6DAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKmB,qBALX,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,QAACT,EAAD,CAAoBU,KAAK,UAAUD,QAAQ,uBACzC,kdAAoc,aAAGE,WAAW,IAC9c,KAAQ,gGADwb,kBAApc,OAIF,oNAAsM,sBAAYA,WAAW,KAAvB,4BAAtM,cAAwR,aAAGA,WAAW,IAClS,KAAQ,2FAD4Q,wDAAxR,2HAE4L,sBAAYA,WAAW,KAAvB,0BAF5L,4CAGA,kDACA,mBACE,cAAIA,WAAW,MAAf,0CAA8D,sBAAYA,WAAW,MAAvB,uDAA9D,iDACA,cAAIA,WAAW,MAAf,yBAA6C,sBAAYA,WAAW,MAAvB,yCAA7C,eAA8I,sBAAYA,WAAW,MAAvB,+BAA9I,eACA,cAAIA,WAAW,MAAf,UAA8B,sBAAYA,WAAW,MAAvB,sBAA9B,uBAAoH,sBAAYA,WAAW,MAAvB,WAApH,wCACA,cAAIA,WAAW,MAAf,sHAA0I,sBAAYA,WAAW,MAAvB,4BAA1I,qBAAoO,sBAAYA,WAAW,MAAvB,8BAApO,uBACA,cAAIA,WAAW,MAAf,4DAAgF,sBAAYA,WAAW,MAAvB,qCAAhF,qCAAmM,sBAAYA,WAAW,MAAvB,4BAAnM,MAA8Q,sBAAYA,WAAW,MAAvB,gBAA9Q,MACA,cAAIA,WAAW,MAAf,qCAAyD,sBAAYA,WAAW,MAAvB,0CAAzD,eAA2J,sBAAYA,WAAW,MAAvB,+BAA3J,qGAEF,+DAAiD,aAAGA,WAAW,IAC3D,KAAQ,qEADqC,mCAAjD,uDAKH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://example/./src/pages/broadcaster-sdk-ios/authentication.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`Please note that as of November 1st, 2022 IBM has discontinued support for the Video Streaming Broadcaster SDK. It will not receive updates or technical support and may not fully function. For SDKs you have already downloaded, please do not use them to build applications to access the broadcasting functionality, and delete them from your archives. You may find information on alternative methods to broadcast live video to your channel on our `}<a parentName=\"p\" {...{\n          \"href\": \"https://support.video.ibm.com/hc/en-us/categories/200545448-Broadcasting-on-IBM-Watson-Media\"\n        }}>{`Support Center`}</a>{`.`}</p>\n    </InlineNotification>\n    <p>{`IBM Video Streaming SDK provides a secure way to authenticate users with IBM ID or legacy Ustream account and getting access for IBM Channel API features for example listing or broadcasting. `}<inlineCode parentName=\"p\">{`IBMWatsonMediaAuthClient`}</inlineCode>{` wraps up `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.video.ibm.com/channel-api/getting-started.html#authorization-flows_2\"\n      }}>{`IBM Video Streaming Channel APIs Authentication flow`}</a>{` and implements a basic authentication service that present the IBM Video Streaming authentication site in an embedded `}<inlineCode parentName=\"p\">{`SFSafariViewController`}</inlineCode>{` on iOS or in default browser on macOS.`}</p>\n    <p>{`Current authentication flow:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Set up the authentication client with `}<inlineCode parentName=\"li\">{`configureClientWithClientID:redirectURI:completion:`}</inlineCode>{` must be called prior to any other requests.`}</li>\n      <li parentName=\"ul\">{`Open login site with `}<inlineCode parentName=\"li\">{`requestLoginWithPresenter:completion:`}</inlineCode>{` on iOS or `}<inlineCode parentName=\"li\">{`requestLoginWithCompletion:`}</inlineCode>{` on macOS.`}</li>\n      <li parentName=\"ul\">{`Place `}<inlineCode parentName=\"li\">{`handleRedirectURL:`}</inlineCode>{` into AppDelegates `}<inlineCode parentName=\"li\">{`openURL`}</inlineCode>{` callback for handling redirection.`}</li>\n      <li parentName=\"ul\">{`If user successfully logged in credentials (access token, refresh token, id token payload) will be accessible via `}<inlineCode parentName=\"li\">{`IBMWatsonMediaAuthClient`}</inlineCode>{` properties. See `}<inlineCode parentName=\"li\">{`IBMWatsonMediaAuthClient.h`}</inlineCode>{` for more details.`}</li>\n      <li parentName=\"ul\">{`If access token expires a new one can be requested with `}<inlineCode parentName=\"li\">{`requestFreshTokensWithCompletion:`}</inlineCode>{` it gets a new access token with `}<inlineCode parentName=\"li\">{`IBMWatsonMediaAuthClient`}</inlineCode>{`s `}<inlineCode parentName=\"li\">{`refreshToken`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`For log out host app should call `}<inlineCode parentName=\"li\">{`requestLogoutWithPresenter:completion:`}</inlineCode>{` on iOS or `}<inlineCode parentName=\"li\">{`requestLoginWithCompletion:`}</inlineCode>{` on macOS. These methods opens authentication site for invalidate tokens and other credentials.`}</li>\n    </ul>\n    <p>{`For more details see sample apps or visit `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.video.ibm.com/channel-api/getting-started.html\"\n      }}>{`IBM Video Streaming Channel API`}</a>{` page for more information about Channel API usage.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineNotification","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","kind","parentName","isMDXComponent"],"sourceRoot":""}